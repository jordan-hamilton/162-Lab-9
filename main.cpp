/***********************************************************************************************
** Program name: Lab 9
** Author: Jordan Hamilton
** Date: 11/25/2018
** Description: This program displays a menu asking the user to either simulate a buffer or
** create a palindrome. The buffer simulator asks the user to simulate a number of rounds with
** different odds of adding or removing integers to a queue that represents a buffer,
** displaying the average size of the buffer over the course of the simulation and the contents
** of the buffer. The palindrome creator prompts the user to enter a string, which then is
** stored into a stack and then added to the string in reverse by popping off characters to form
** a palindrome of the originally entered string, which is displayed to the user.
***********************************************************************************************/

#include <cstdlib>
#include <iostream>
#include <memory>

#include "Menu.hpp"
#include "queueSim.hpp"
#include "stackSim.hpp"

using std::cout;
using std::endl;
using std::srand;
using std::time;
using std::unique_ptr;

void populateMenu(unique_ptr<Menu> &menu);

/***********************************************************************************************
** Description: This program can be run via the lab9 executable generated by make.
***********************************************************************************************/
int main() {

  unsigned seed = time(0);
  srand(seed);

  int choice;
  unique_ptr<Menu> mainMenu( new Menu("Select from the following options:") );

  populateMenu(mainMenu);

  do {

    choice = mainMenu->getIntFromPrompt(1, mainMenu->getMenuChoices(), true);

    switch (choice)  {

      case 1 : simulateQueue();
               break;

      case 2 : createPalindrome();
               break;

      default : {}

    }

    cout << endl;

  } while (choice != 3);

  return 0;

}


/***********************************************************************************************
** Description: This function takes a pointer to a Menu object, then calls the addMenuItem
** method to add the approprate menu options to the program's menu.
***********************************************************************************************/
void populateMenu(unique_ptr<Menu> &menu) {

  menu->addMenuItem("Test a buffer");
  menu->addMenuItem("Create a palindrome");
  menu->addMenuItem("Exit");

}
